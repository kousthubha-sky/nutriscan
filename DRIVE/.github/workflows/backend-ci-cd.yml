name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'DRIVE/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'DRIVE/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: DRIVE/package-lock.json
    
    - name: Install Dependencies
      working-directory: ./DRIVE
      run: npm ci
    
    - name: Run Linting
      working-directory: ./DRIVE
      run: npm run lint
    
    - name: Run Tests
      working-directory: ./DRIVE
      run: npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/test
        JWT_SECRET: test-secret
        PORT: 3000

    - name: Build
      working-directory: ./DRIVE
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: DRIVE/package-lock.json
    
    - name: Install Dependencies
      working-directory: ./DRIVE
      run: npm ci
    
    - name: Build Application
      working-directory: ./DRIVE
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan github.com >> ~/.ssh/known_hosts
    
    - name: Deploy Application
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        NODE_ENV: production
      run: |
        pm2 delete drive-app || true
        cd DRIVE
        pm2 start dist/server.js --name drive-app
        pm2 save
